services:

  # --- Auth Service (uses LOCAL MySQL) ---
  auth-service:
    build:
      context: .
      dockerfile: src/auth-service/Dockerfile
    container_name: auth-service
    environment:
      SERVER_ADDRESS: 0.0.0.0
      SERVER_PORT: 9000

      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,mappings
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG

      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQLDialect
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/auth_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD:
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

      APP_JWT_SECRET: 0d3bf2a4d3f94f44b7e06a3b8c2a9f7e0d3bf2a4d3f94f44b7e06a3b8c2a9f7e
      ACCOUNT_SERVICE_URL: http://account-service:9001
    ports:
      - "9000:9000"

  # --- Account Service (uses LOCAL MySQL) ---
  account-service:
    build:
      context: .
      dockerfile: src/account-service/Dockerfile
    container_name: account-service
    environment:
      SERVER_PORT: 9001

      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQLDialect
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/account_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD:
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

      APP_JWT_SECRET: 0d3bf2a4d3f94f44b7e06a3b8c2a9f7e0d3bf2a4d3f94f44b7e06a3b8c2a9f7e
    ports:
      - "9001:9001"

  # --- Item Service (Mongo) ---
  item-service:
    build:
      context: .
      dockerfile: src/item-service/Dockerfile
    container_name: item-service
    environment:
      SERVER_PORT: 9002
      SPRING_DATA_MONGODB_URI: mongodb://host.docker.internal:27017/item_db
      APP_JWT_SECRET: 0d3bf2a4d3f94f44b7e06a3b8c2a9f7e0d3bf2a4d3f94f44b7e06a3b8c2a9f7e
    ports:
      - "9002:9002"

  # --- Order Service (uses LOCAL MySQL) ---
  order-service:
    build:
      context: .
      dockerfile: src/order-service/Dockerfile
    container_name: order-service
    depends_on:
      item-service:
        condition: service_started
      auth-service:
        condition: service_started
    environment:
      SERVER_PORT: 9003

      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQLDialect
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/order_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD:
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

      APP_JWT_SECRET: 0d3bf2a4d3f94f44b7e06a3b8c2a9f7e0d3bf2a4d3f94f44b7e06a3b8c2a9f7e

      # Internal service URLs (compose DNS)
      ITEM_SERVICE_BASE_URL: http://item-service:9002
      AUTH_SERVICE_BASE_URL: http://auth-service:9000

      # Service-to-service creds (if used)
      SERVICE_USER: order-bot
      SERVICE_PASS: order-bot
    ports:
      - "9003:9003"

  # --- Payment Service (uses LOCAL MySQL) ---
  payment-service:
    build:
      context: .
      dockerfile: src/payment-service/Dockerfile
    container_name: payment-service
    depends_on:
      order-service:
        condition: service_started
      auth-service:
        condition: service_started
    environment:
      SERVER_PORT: 9004

      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQLDialect
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/payment_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD:
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

      APP_JWT_SECRET: 0d3bf2a4d3f94f44b7e06a3b8c2a9f7e0d3bf2a4d3f94f44b7e06a3b8c2a9f7e

      ORDER_SERVICE_BASE_URL: http://order-service:9003
      AUTH_SERVICE_BASE_URL: http://auth-service:9000

      SERVICE_USER: payment-bot
      SERVICE_PASS: payment-bot
    ports:
      - "9004:9004"
